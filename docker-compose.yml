version: '3.8'

services:
  rag_app:
    build: .
    volumes:
      - ./app:/usr/src/app/app
      - ./data:/usr/src/app/data
      - ./vector_store:/usr/src/app/vector_store  # Persist the vector store
      - ./config.py:/usr/src/app/config.py:ro     # Mount config.py as read-only (if exists)
    environment:
      - PYTHONPATH=/usr/src/app
      # Pass environment variable from host to container:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    
    # Usage Examples:
    # 
    # 1. Using config.py file (create from template first):
    #    cp config.py.template config.py  # Add your API key
    #    docker-compose run rag_app python app/ingest.py
    #    docker-compose run rag_app python app/main.py --query "your question"
    #
    # 2. Using environment variable (more secure):
    #    export OPENAI_API_KEY="sk-your-api-key"
    #    docker-compose run rag_app python app/ingest.py
    #    docker-compose run rag_app python app/main.py --query "your question"
    #
    # To run ingestion:
    # docker-compose run rag_app python app/ingest.py
    # 
    # To run querying (examples):
    # docker-compose run rag_app python app/main.py --query "Which phone is best for gaming?"
    # docker-compose run rag_app python app/main.py --interactive
    #
    # Users will execute commands like:
    # docker-compose run rag_app python app/ingest.py
    # docker-compose run rag_app python app/main.py --query "your question" 